// <auto-generated />
using System;
using DartsApp.RestAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DartsApp.RestAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Winmau",
                            Model = "Blade6",
                            TournamentId = 1,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Winmau",
                            Model = "Blade5",
                            TournamentId = 1,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Winmau",
                            Model = "Blade4",
                            TournamentId = 2,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Winmau",
                            Model = "Blade3",
                            TournamentId = 3,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Koto",
                            Model = "Tournament",
                            TournamentId = 4,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Koto",
                            Model = "King Pro",
                            TournamentId = 1,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Koto",
                            Model = "King Classic",
                            TournamentId = 2,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Unicorn",
                            Model = "Eclipse Pro",
                            TournamentId = 3,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Unicorn",
                            Model = "Contender",
                            TournamentId = 4,
                            Type = "sizylowa"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Unicorn",
                            Model = "Eclipse Ultra",
                            TournamentId = 5,
                            Type = "sizylowa"
                        });
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactEmail")
                        .IsUnique();

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Gdańsk",
                            ContactEmail = "kielich@gmail.com",
                            ContactNumber = "123456789",
                            Name = "Pub Kielich",
                            PostalCode = "80-120",
                            Street = "Grunwaldzka 3"
                        },
                        new
                        {
                            Id = 2,
                            City = "Wrocław",
                            ContactEmail = "red@red.com",
                            ContactNumber = "987654321",
                            Name = "Red Pub",
                            PostalCode = "20-120",
                            Street = "Kościuszki 4"
                        },
                        new
                        {
                            Id = 3,
                            City = "Bydgoszcz",
                            ContactEmail = "pobite_gary@gmail.com",
                            ContactNumber = "123456789",
                            Name = "Pobite gary",
                            PostalCode = "10-120",
                            Street = "Toruńska 5"
                        },
                        new
                        {
                            Id = 4,
                            City = "Toruń",
                            ContactEmail = "elo@disco.com",
                            ContactNumber = "123456789",
                            Name = "Elo Disco",
                            PostalCode = "80-130",
                            Street = "Jasna 6"
                        },
                        new
                        {
                            Id = 5,
                            City = "Piaseczno",
                            ContactEmail = "pub@gmail.com",
                            ContactNumber = "987654321",
                            Name = "Pub",
                            PostalCode = "50-125",
                            Street = "Geodetów 8"
                        },
                        new
                        {
                            Id = 6,
                            City = "Kowale",
                            ContactEmail = "dart_pub@gmail.com",
                            ContactNumber = "123456789",
                            Name = "Dart pub",
                            PostalCode = "80-135",
                            Street = "Starowiejska 1"
                        },
                        new
                        {
                            Id = 7,
                            City = "Wejherowo",
                            ContactEmail = "Pubik@Pubik.com",
                            ContactNumber = "666888999",
                            Name = "Pubik",
                            PostalCode = "00-110",
                            Street = "Kaszubska 8"
                        },
                        new
                        {
                            Id = 8,
                            City = "Malbork",
                            ContactEmail = "melina@gmail.com",
                            ContactNumber = "123456789",
                            Name = "Melina",
                            PostalCode = "10-120",
                            Street = "Tczewska 3"
                        },
                        new
                        {
                            Id = 9,
                            City = "Warszawa",
                            ContactEmail = "tarasy@gmail.com'",
                            ContactNumber = "123456789",
                            Name = "PTarasy",
                            PostalCode = "30-320",
                            Street = "Fajna 666"
                        },
                        new
                        {
                            Id = 10,
                            City = "Poznań",
                            ContactEmail = "pod.kozłami@gmail.com",
                            ContactNumber = "666888999",
                            Name = "Pub Pod Kozłami",
                            PostalCode = "10-000",
                            Street = "Pyry 3"
                        },
                        new
                        {
                            Id = 11,
                            City = "Katowice",
                            ContactEmail = "podkrasnalem@gmail.com",
                            ContactNumber = "123456789",
                            Name = "Pod krasnalem",
                            PostalCode = "50-420",
                            Street = "Krakowska 3"
                        });
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Ranking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ContactEmail")
                        .IsUnique();

                    b.HasIndex("ContactNumber")
                        .IsUnique();

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthdayDate = new DateTime(2000, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "adam.nowak@example.com",
                            ContactNumber = "888000111",
                            FirstName = "Adam",
                            LastName = "Nowak",
                            Ranking = 0
                        },
                        new
                        {
                            Id = 2,
                            BirthdayDate = new DateTime(2002, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "ewa.kowalska@example.com",
                            ContactNumber = "222333444",
                            FirstName = "Ewa",
                            LastName = "Kowalska",
                            Ranking = 170
                        },
                        new
                        {
                            Id = 3,
                            BirthdayDate = new DateTime(1989, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "pawel.wisniewski@example.com",
                            ContactNumber = "333444555",
                            FirstName = "Paweł",
                            LastName = "Wiśniewski",
                            Ranking = 180
                        },
                        new
                        {
                            Id = 4,
                            BirthdayDate = new DateTime(1984, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "magdalena.wojcik@example.com",
                            ContactNumber = "444555666",
                            FirstName = "Magdalena",
                            LastName = "Wójcik",
                            Ranking = 160
                        },
                        new
                        {
                            Id = 5,
                            BirthdayDate = new DateTime(2006, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "michal.lewandowski@example.com",
                            ContactNumber = "555666777",
                            FirstName = "Michał",
                            LastName = "Lewandowski",
                            Ranking = 190
                        },
                        new
                        {
                            Id = 6,
                            BirthdayDate = new DateTime(1999, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "katarzyna.kaminska@example.com",
                            ContactNumber = "666777888",
                            FirstName = "Katarzyna",
                            LastName = "Kamińska",
                            Ranking = 200
                        },
                        new
                        {
                            Id = 7,
                            BirthdayDate = new DateTime(1979, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "jan.zielinski@example.com",
                            ContactNumber = "777888999",
                            FirstName = "Jan",
                            LastName = "Zieliński",
                            Ranking = 140
                        },
                        new
                        {
                            Id = 8,
                            BirthdayDate = new DateTime(1994, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "anna.szymanska@example.com",
                            ContactNumber = "888999000",
                            FirstName = "Anna",
                            LastName = "Szymańska",
                            Ranking = 210
                        },
                        new
                        {
                            Id = 9,
                            BirthdayDate = new DateTime(1969, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "tomasz.wozniak@example.com",
                            ContactNumber = "999000111",
                            FirstName = "Tomasz",
                            LastName = "Woźniak",
                            Ranking = 130
                        },
                        new
                        {
                            Id = 10,
                            BirthdayDate = new DateTime(2004, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactEmail = "agnieszka.dabrowska@example.com",
                            ContactNumber = "000111222",
                            FirstName = "Agnieszka",
                            LastName = "Dąbrowska",
                            Ranking = 220
                        });
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.PlayerTournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerPoints")
                        .HasColumnType("int");

                    b.Property<string>("PlayerStatistics")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TournamentId");

                    b.ToTable("PlayerTournaments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlayerId = 1,
                            PlayerPoints = 15,
                            PlayerStatistics = "5 wygranych, 3 przegrane",
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 2,
                            PlayerId = 2,
                            PlayerPoints = 12,
                            PlayerStatistics = "4 wygrane, 4 przegrane",
                            TournamentId = 1
                        },
                        new
                        {
                            Id = 3,
                            PlayerId = 3,
                            PlayerPoints = 18,
                            PlayerStatistics = "6 wygranych, 2 przegrane",
                            TournamentId = 2
                        },
                        new
                        {
                            Id = 4,
                            PlayerId = 4,
                            PlayerPoints = 9,
                            PlayerStatistics = "3 wygrane, 5 przegranych",
                            TournamentId = 2
                        },
                        new
                        {
                            Id = 5,
                            PlayerId = 5,
                            PlayerPoints = 21,
                            PlayerStatistics = "7 wygranych, 1 przegrana",
                            TournamentId = 3
                        },
                        new
                        {
                            Id = 6,
                            PlayerId = 6,
                            PlayerPoints = 6,
                            PlayerStatistics = "2 wygrane, 6 przegranych",
                            TournamentId = 3
                        },
                        new
                        {
                            Id = 7,
                            PlayerId = 7,
                            PlayerPoints = 24,
                            PlayerStatistics = "8 wygranych, 0 przegranych",
                            TournamentId = 4
                        },
                        new
                        {
                            Id = 8,
                            PlayerId = 8,
                            PlayerPoints = 3,
                            PlayerStatistics = "1 wygrana, 7 przegranych",
                            TournamentId = 4
                        },
                        new
                        {
                            Id = 9,
                            PlayerId = 9,
                            PlayerPoints = 15,
                            PlayerStatistics = "5 wygranych, 3 przegrane",
                            TournamentId = 5
                        },
                        new
                        {
                            Id = 10,
                            PlayerId = 10,
                            PlayerPoints = 12,
                            PlayerStatistics = "4 wygrane, 4 przegrane",
                            TournamentId = 5
                        });
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TournamentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Turniej Zielony Pub",
                            PlaceId = 1,
                            TournamentDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Turniej Kielicha",
                            PlaceId = 2,
                            TournamentDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Turniej Czerwony Pub",
                            PlaceId = 3,
                            TournamentDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Name = "Turniej Pobitych Garów",
                            PlaceId = 4,
                            TournamentDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Name = "Turniej Disco",
                            PlaceId = 5,
                            TournamentDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Name = "Turniej Pubu",
                            PlaceId = 6,
                            TournamentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Name = "Turniej Dart Pub",
                            PlaceId = 7,
                            TournamentDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Name = "Turniej Pubiku",
                            PlaceId = 8,
                            TournamentDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Name = "Turniej Meliny",
                            PlaceId = 9,
                            TournamentDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Name = "Turniej Tarasów",
                            PlaceId = 10,
                            TournamentDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Name = "Turniej Krasnala",
                            PlaceId = 11,
                            TournamentDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Name = "Turniej Zielonego Pubu",
                            PlaceId = 10,
                            TournamentDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Name = "Turniej Kielicha II",
                            PlaceId = 2,
                            TournamentDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Name = "Turniej Czerwonego Pubu II",
                            PlaceId = 3,
                            TournamentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Name = "Turniej Pobitych Garów II",
                            PlaceId = 9,
                            TournamentDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Board", b =>
                {
                    b.HasOne("DartsApp.RestAPI.Entities.Tournament", "Tournament")
                        .WithMany("Boards")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.PlayerTournament", b =>
                {
                    b.HasOne("DartsApp.RestAPI.Entities.Player", "Player")
                        .WithMany("PlayerTournaments")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DartsApp.RestAPI.Entities.Tournament", "Tournament")
                        .WithMany("PlayerTournaments")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Tournament", b =>
                {
                    b.HasOne("DartsApp.RestAPI.Entities.Place", "Place")
                        .WithMany("Tournament")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Place", b =>
                {
                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Player", b =>
                {
                    b.Navigation("PlayerTournaments");
                });

            modelBuilder.Entity("DartsApp.RestAPI.Entities.Tournament", b =>
                {
                    b.Navigation("Boards");

                    b.Navigation("PlayerTournaments");
                });
#pragma warning restore 612, 618
        }
    }
}
